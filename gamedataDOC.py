import random #нужен для рандома урона и т.д.
import datetime #нужен для отображения времени

"""
версия 0.2.7 < обстрактная штука нужная для понимания того что сделал (вся дополнительная информация в низу)
версия док 0.3 
"""

def gamedata(level, healpoint, endtime, cash, mode): #вся информация по начальным параметрам внизу

    #==================================================MAIN < В версии 0.2.7 Был перемешен сюда

    hp = healpoint #мы указываем в gamedata(level, healpoint, endtime) при вызове

    enemy = healpoint # что бы все было честно у врага столько же хп в начале
    enemystart = True # нужно для того что бы при смерти врага команда if enemy <= 0 не срабатывала больше

    lvl = level #означает уровень, который влияет на damage,defense,endtime и hp после завершения первого цикла while
    lvlup = lvl + 1  # теперь лвл будет повышаться в цикле каждый раз когда лвл будет равен лвлап
    hplvl = hp # на данный момент я заметил одину фичу, мб это будет просто пофиксить

    elvl = (level // 1.2) #тоже само но для врага(в целях облегчить тестирование и т.д. он немного уменьшаеться(?))
    elvlup = elvl + 1 # фича в том что если вы повысите уровень больше раза за цикл
    ehplvl = enemy # то зашитываяться только один(потому что код проходит один раз по данному отрузку)

    money = cash * 1.5 #количесто денег увеличиваеться от того сколько поставил игрок

    #typepower = ("Dark", "Lightning", "Fire", "Aqua", "Crystal", "Chaos", "Poison", "Blessed") < этого еще нет

    endTime = endtime #время которое нужно пережить что бы перейти на следуйший этап (должен работать в милисекундах)

    start = True #старт

    datetimeStart = datetime.datetime.now() #нужно для отображения времини в конце цикла

    while start:

        #==================================================LEVEL UP AND HP LOCK < NEW IN 0.2.5

        if lvl >= lvlup: #собственно сам механизм повышения уровня

            """
            устроен таким образом: когда лвл больше лвлап игрок или враг, получает 15хп к максимальному
            значению хп и полностью востонавливает хп. после чего лвлап повышаеться на 1
            (прим. lvl = 1 lvlup = 2, lvl= 22 lvlup = 23)
            """

            hplvl += 15
            hp = hplvl
            lvlup += 1

        if hp >= hplvl: # ограничение теперь работает с лвл и собственно лимит теперь не 100
            hp = hplvl # что приводило к быстрой смерти на больших лвл раньше

        if elvl >= elvlup: #пока что все значения которые относятся к enemy в начале получили "e"

            ehplvl += 15 
            enemy += ehplvl # но хп = enemy / не 'ehp'
            elvlup += 1

        #print(f"UR HPLVL {hplvl} \nENEMY HPLVL {elvlup}") <  показывает хп\лвл игрока\врага

        if enemy >= ehplvl:
            enemy = ehplvl 

        #==================================================USER MAIN < изменненое названия MAIN 

        damage = 1 + (lvl // 2) # изначальный урон 1, который + с лвл //(Получение целой части от деления) 7
        defenserandom = random.uniform(1,1.5)# рандомит от 1 до 1.5 усиление для defense
        defense = (5 * defenserandom) + (lvl // 3) #изначально 5 увеличивается от уровня и рандома

        attack = random.randint(5,10) #урон атаки генерируеться каждый проход цикла, потом + damage
        attackboost = random.uniform(1,2) #рандом для буста

        accuracy = random.uniform(0.85,1) #акуратность=точность удара, не убирает его, но может уменьшить силу

        hpboost = random.randint(20,25) #рандомная хилка
        hpultraboost = random.uniform(1,2) #рандом увеличения хила

        lvl = lvl + 0.001 #уровень каждый проход цикла увеличиваеться на 0,01
        #print(f"level: {(lvl)}")
        money += 0.05 #деньги (сестема денег описанна в низу)
        #print(f"Money: {(money)}")

        numb = random.randint(0,300) #рандом (исльзуеться для хила)
        agility = random.randint(0,500) #рандом для отсеивания н-урона в данный цикл

        #==================================================MODE < NEW IN 0.2.5 (ENEMY MAIN теперь ниже)

        if mode == "Test": #тестовый или же бесконечный режим без врага\врагов

            damagedell = -int((defense - (attack + damage)) // accuracy)

        """
        дамаг вышитываеться таким образом = -(для того что бы число было +?), int(для того что бы не было такого: 0.1)
        потом defense мы - от того что получиться в (attack + damage) 
        и  разделяем на accuracy(хотя сейчас когда я это пишу понимаю что работает это только на высоких уровнях)
        теперь в версии 0,2: урон делится на так называемый свой чужой, мы наносим урон врагу, он нам
        все остальное остаеться на преждих местах.
        """

        if mode == "Versus" or "Enemy":

            #======================ENEMY MAIN < теперь под розделы выглядят так

            edamage = 1 + (elvl // 2) #все как и сверху но пременимо к врагу
            edefenserandom = random.uniform(1,1.5) # в будушем будут авто генерироваться с значениями для каждого бота
            edefense = (5 * edefenserandom) + (elvl // 3)

            eattack = random.randint(5,10) # эти строки кода(и основые) находяться в нутри цикла для того
            eattackboost = random.uniform(1,2) # что бы генерироваться заново каждый цикл

            eaccuracy = random.uniform(0.85,1)

            ehpboost = random.randint(20,25)
            ehpultraboost = random.uniform(1,2)

            elvl = elvl + 0.001

            enumb = random.randint(0,300)
            eagility = random.randint(0,500)

            if mode == "Versus": # модификация при которой смерть врага заканчивает игру

                damagedell = -int((defense - (eattack + edamage)) // eaccuracy) # урон сцитаеться таким образом
                edamagedell = -int((edefense - (attack + damage)) // accuracy) # будто вы воюете один против одного
            
            if mode == "Enemy": # модификация при которой смерть врага не заканчивает игру, но дает бонусы игроку

                damagedell = -int((defense - (attack + damage)) // accuracy) # в этом режиме урон получают отдельно
                edamagedell = -int((defense - (attack + damage)) // accuracy) # что бы все было честно используеться только статы игрока(!)
                # данный мод еще не полностью работо способен(так как количество врагов ограниченно одним)

            #======================DAMAGE AND HPBOOST < Вся информация в USER > DAMAGE AND HPBOOST 

            if eagility >= 300:     
                enemy = enemy - edamagedell

            if eagility >= 450:
                enemy = enemy - ((edamagedell * eattackboost) // 2)

            if enemy <= 100 and enumb <= 100:
                enemy += 5

            elif enemy <= 35 and enumb <= 50:
                enemy += ehpboost

            elif enemy <= 35 and enumb <= 25:
                enemy += (ehpboost // eaccuracy)

        #==================================================ENEMY DEAD < NEW in Version 0.2
        """ 
            Когда враг умирает гг получает деньги/уровень врага поделенный на 2, и получает 50хп*
            Так же в случаи если стоит mode == "Versus" игра будет законченна. (об модах в самом низу)
            *не факт что так и останеться сейчас это было сделанно для меньших смертей в тесте
        """

        if enemystart and mode == "Versus" or "Enemy":
            
            if enemy <= 0 and enemystart:

                print("enemy is dead")
                money += 100
                lvl += (elvl // 2)
                hp += 50
                enemystart = False

                if mode == "Versus":
                    
                    datetimeEnd = datetime.datetime.now()
                    datetimeDelta = datetimeEnd - datetimeStart

                    print(f"You Win \nYou stay alive: {datetimeDelta} \nYour level: {lvl}")
                    print(f"You save money: {round(((lvl // 2) + money) * defenserandom)}")
                    start = False

            elif enemy <= 25:
                print(f"Enemy heartpoint: {round(enemy)}")

        #==================================================USER > DAMAGE AND HPBOOST 
        # о рашете урона в > MODE

        if agility >= 300: # когда agility больше или равно 300 происходит удар
            
            hp = hp - damagedell
            #print(f"attack: {(damagedell)}")

        if agility >= 450: # я раздиляю урон на 2 так как он и так получаеться очень силным(почему не сделать elif?)

            #(т.к. урон первого так же зашитываеться и на высоких уровнях оно может убить с одной тычки)
            hp = hp - ((damagedell * attackboost) // 2)
            #print(f"attackboost: {((damagedell * attackboost) // 2) + (damagedell)}") < ВАЖНО: показывает обший урон нанесенный бонусом и первый значение   

        if hp <= 100 and numb <= 100: #если хп ниже такого то и удача рада тебе ты хилишься
            
            hp = hp + 5

        elif hp <= 35 and numb <= 50:
            
            hp = hp + hpboost
            
        elif hp <= 35 and numb <= 25: #(тут пока не доделанно, так что оно просто еще раз хилит тебя)
                
            hp = hp + (hpboost // accuracy) # accuracy играет чисто номинальную роль, и может немного уменьшить хил
        
        #==================================================UR DEAD 

        if hp < 0: #если хп 0 игра* заканчиваеться
            
            datetimeEnd = datetime.datetime.now()
            datetimeDelta = datetimeEnd - datetimeStart
            
            print(f"You are dead \nYou stay alive: {datetimeDelta} \nYour level: {lvl} \nMoney lose: {round(money)}")
            
            
            start = False

        elif hp <= 50: # работает через elif что бы не выводило после смерти
            print(f"heartpoint: {round(hp)}") #изначально не отображает хп до того как оно не опуститься ниже 50
        
        #==================================================UR NOT DEAD

        endTime = endTime - 1 #таймер 

        if endTime <= 0: #когда endTime становиться меньше игра пройдина (меньше т.к. по каким то причинам мог становиться отрицательным)

            datetimeEnd = datetime.datetime.now()
            datetimeDelta = datetimeEnd - datetimeStart #количество проведенного времени* сумируеться при некст циклах
            
            print(f"You stay alive: {datetimeDelta} \nYour level: {lvl} \nHeartpoint: {round(hp + 100 + lvl)} \nYour money: {round(money)}")
            #отображает статистику по циклу* и не только

            nextstage = input("next or exit?: ") #предлагает продолжить или закончить* 
            
            if nextstage == "next": 
                """
                когда переходишь на некст цикл: 
                лвл увеличиваеться на 10*, хп увеличиваеться на 100 + лвл* round дает число без точки
                endTime* + 200 милисекунд и (лвл умноженный на 2)* милисекунд.
                так же теперь все это относиться и для врага. в 0,2,7 удалил прибавку лвл после завершения цикла.
                """

                hp += 100 + round(lvl)
                enemy += 100 + round(elvl) 

                money += 10
                endTime += endTime + 200 + (round(lvl) * 2)

                continue   
            
            elif nextstage == "exit":
                #при выходиде выведет колво денег которое ты получил* офк это тестовая штука

                print(f"You save money: {round(((lvl // 2) + money) * defenserandom)}")
                start = False

            else:
                #тоже самое (на самом деле не нужно(не нужен первый вариант с "exit" но пускай))

                print("gg")
                print(f"You save money: {round(((lvl // 2) + money) * defenserandom)}")
                start = False

gamedata(level= 1, healpoint= 100, endtime= 200, cash= 100, mode= "Versus")

""" gamedata modificator:
level= стартовый уровень влияет на урон получаемый врагом* так же влияет и на зашиту
в конце цикла приплюсовываеться к количеству хп, а в случаи окончания игры? делитца на 2 и добавляеться к money
healpoint= количество хп на старте(в основном используеться для теста) в будушем от так же будет зависить от левела
endtime= таймер для завершения цикла, сейчас в основном используеться для теста
cash= в будушем это будет ставка пользователя и так далее связанное с дб
mode= "Versus" модификация игры, сейчас их по факту три(!) (**в основном используеться для теста урога**)
о модах отдельно написано в разделе > MODE
(! работаю все 3, но без дополнительной настройки все режимы кроме версус не играбельны)
"""

#==================================================Other

"""
всяческий *,(!),? и тд, означают что на это стоит обратить внимание/это не доделанно/не увер в правильности формулировок
Раздел Other будет содержать вожможные сноски с оновного текста а так же всяческую дополнительную информацию
включая полезные сылки на различные сайты/статьи/видеоматериалы
Обьшее количество строк в Док версии 326* включая пробелы
Обьшее количество строк в обычной версии 225* включая пробелы
Обьшее количество строк кода в обычной версии 97* (!не обновлялось с версии 0,2)
Док версию так же можно запускать(! возможны баги и проблемы с TAB ERROR или что то типа этого.)
"""

#==================================================RDR

"""
Version 0.2.7 6/5/2020
Исправлены некоторые проблемы, а так же не ограниченное хп(т.к. == просто проверял, а надо было что бы он присваивал)
на глобальное обновление все еще не выходит, было удалено получение лвл при завершени цикла. 
Версия док 0.3.2 мелкие правки, удаления некоторых мыслей, за менена некоторая информация

Version 0.2.5 6/5/2020 12:00PM(!в тот же день но посже)
Уровень теперь влияет на максимальное колво хп и теперь лвл увеличиваеться во время цикла(один раз)
теперь несколько модификаторов игры, изменнено росположение некоторых строк кода, так же появилась
версия документации (так как я понял что колво изменений при записывании мойх идей и всего прочего может меняться из раза в раз)
ну и по той причине что тут очень много разных опичаток(! буду стараться фиксить)
версия док: 0.3

Version 0.2 6/5/2020
добавлен враг, добавлен новый mode= "Versus" (который ломант обычный), 
добавленны деньги *на данный момент бесполезны, добавленны пробелы, изменнены некоторые описания, 
был немного изменен баланс, добавленны разделения с названиями (прим. ===========RDR).

Только на бумаге(!) добавлен тип урона(typepower) который должен будет являться и зашитой 
и давать преймушество(или не очень) в бою. прим покемоны 
"""

#==================================================Pokemon

"""
Damage – полученный противником урон, искомое значение;
lvl – уровень пользователя;
Attack – значение стата физической атаки / стата специальной атаки пользователя;
Defense – значение стата защиты / стата специальной защиты пользователя;
Base – базовая мощность атаки;
STAB – СТАБ-эффект; в случае, если стаб. эффект присутствует, то для расчета используется коэффициент 1.5, в противном случае 1;
Type – коэффициент эффективности атаки, определяется эффективностью типов, возможные значения: 0, 0.25, 0.5, 1, 2, 4, 8 (в случае добавления 3 типа противнику атакой Гнев леса и эффективности атаки пользователя по трем типам);(!)
Critical – коэффициент критического удара, в случае критического удара в расчете используется коэффициент 1.5, в противном случае 1;
other – дополнительные факторы, такие как Стаб. усилители и прочие надетые на монстра айтемы, абилки (особые способности монстров, в Лиге-17 на данный момент отсутствуют), влияние погоды, преимущества по типу поля (на данный момент в Лиге-17 подобное отсутствует);
random[0.85,1] – случайное число в диапазоне от 0.85 до 1.
"""